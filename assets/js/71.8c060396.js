(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{390:function(t,s,a){"use strict";a.r(s);var n=a(42),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_09-运行时环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_09-运行时环境"}},[t._v("#")]),t._v(" 09 | 运行时环境")]),t._v(" "),a("p",[t._v("在宏观上，要执行一段 JS 代码，只需要将 JS 丢给 V8 虚拟机，V8便会执行并返回结果。")]),t._v(" "),a("p",[t._v("其实，V8 在执行 JS 代码的之前，就已经准备好了代码的运行时环境。这个环境包括：")]),t._v(" "),a("ul",[a("li",[t._v("堆空间和栈空间")]),t._v(" "),a("li",[t._v("全局执行上下文")]),t._v(" "),a("li",[t._v("全局作用域")]),t._v(" "),a("li",[t._v("内置的内建函数")]),t._v(" "),a("li",[t._v("宿主环境提供的扩展函数和对象")]),t._v(" "),a("li",[t._v("消息循环系统")])]),t._v(" "),a("p",[t._v("准备好环境以后，V8 才会执行 JS 代码，包括解析源码，生成字节码，解释执行 和 编译执行一系列操作。\n"),a("img",{attrs:{src:"/images/a89d747fb614a17e08b1a6b7dce62b54.jpg",alt:"runtime"}})]),t._v(" "),a("p",[t._v("对运行时环境足够了解，才能够彻底理解 V8 的整个执行流程。\n如 事件循环系统 可以明白回调函数是怎么执行的；\n栈空间可以理解函数怎么被调用的；\n堆空间和栈空间可以理解为什么传值和传引用的等等。\n"),a("img",{attrs:{src:"/images/9ad5d32bce98aad219c9f73513ac6349.jpg",alt:"runtime 环境"}})]),t._v(" "),a("h2",{attrs:{id:"一、宿主环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、宿主环境"}},[t._v("#")]),t._v(" 一、宿主环境")]),t._v(" "),a("p",[t._v("要执行 V8，就需要一个宿主环境，宿主环境可以是浏览器中的渲染进程，也可以是 Node.js 进程，也可以是其他定制的环境。")]),t._v(" "),a("p",[t._v("如 V8 和浏览器的渲染进程")]),t._v(" "),a("ul",[a("li",[t._v("浏览器为 V8 提供基础的消息循环系统，全局变量，Web API 等。")]),t._v(" "),a("li",[t._v("V8 只提供了 ECMAScript 定义的一些对象和一些核心的函数，这包括了 Object、Function、String。除此之外，V8 还提供了垃圾回收器、协程等基础内容，不过这些功能依然需要宿主环境的配合才能完整执行。")])]),t._v(" "),a("p",[t._v("V8 使用不当，比如不规范的触发垃圾回收机制，或者某个函数执行时间过久，都会占用主线程，从而影响程序的执行效率，导致宿主环境的卡死。\n"),a("img",{attrs:{src:"/images/e541d8611b725001509bfcd6797f492f.jpg",alt:"宿主环境和V8的关系"}})]),t._v(" "),a("h2",{attrs:{id:"二、堆空间和栈空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、堆空间和栈空间"}},[t._v("#")]),t._v(" 二、堆空间和栈空间")]),t._v(" "),a("p",[t._v("由于 V8 是寄生在宿主环境的，如浏览器中只要打开渲染进程，就会自动启动 V8，同时初始化堆空间和栈空间。")]),t._v(" "),a("p",[a("strong",[t._v("堆空间用来存放一些对象数据，栈空间用来存放原生数据")]),t._v("。由于堆空间不是线程存储，所以堆空间可以存放很多数据，但是读取的速度会比较慢，而栈空间是连续的，所以堆空间中的查找速度非常快。"),a("br"),t._v("\n由于内存中连续空间很少，所以栈空间都限制大小，由此会造成栈溢出的问题（内存泄露）。")]),t._v(" "),a("h2",{attrs:{id:"三、全局执行上下文和全局作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、全局执行上下文和全局作用域"}},[t._v("#")]),t._v(" 三、全局执行上下文和全局作用域")]),t._v(" "),a("p",[t._v("V8 开始执行一段代码时，会生成一个执行上下文。V8 用执行上下文来维护执行当前代码所需要的变量声明、this 指向等。")]),t._v(" "),a("p",[t._v("执行上下文包括三部分：变量环境，词法环境和 this 关键字。\n"),a("img",{attrs:{src:"/images/0b4929e11b49856037ffdcf00508d4f5.jpg",alt:"什么是执行上下文"}})]),t._v(" "),a("p",[t._v("全局执行上下文在 V8 的生存周期内是不会被销毁的，它会一直保存在堆中，这样当下次在需要使用函数或者全局变量时，就不需要重新创建了。")]),t._v(" "),a("p",[t._v("当 V8 调用一个函数时，就会进入函数的执行上下文，这时候全局执行上下文和当前的函数执行上下文就形成了一个栈结构。如：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("show_x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("show_x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[a("img",{attrs:{src:"/images/86ee3d0f4b2a8e8cc6c2b3fc320dcce1.jpg",alt:"函数调用栈"}})]),t._v(" "),a("h2",{attrs:{id:"四、构造事件循环系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、构造事件循环系统"}},[t._v("#")]),t._v(" 四、构造事件循环系统")]),t._v(" "),a("p",[t._v("V8 需要一个主线程，用来执行 JS 和垃圾回收等工作。如果该线程执行完这段代码之后，就会自动退出了，执行过程中的一些栈上的数据也随之被销毁，下次再执行另外一个段代码时，你还需要重新启动一个线程。这会严重\n影响程序的性能。")]),t._v(" "),a("p",[t._v("为了解决这个问题，V8 会有一个"),a("strong",[t._v("事件循环系统")]),t._v("，不断的轮询"),a("strong",[t._v("消息队列中")]),t._v("是否有 新的任务。事件循环系统是基于事件驱动的，如果没有任务，该线程会被挂起。\n如果有新任务到达消息队列，那么系统就会将挂起的线程激活，激活后继续向下执行。")])])}),[],!1,null,null,null);s.default=r.exports}}]);