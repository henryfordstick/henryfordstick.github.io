(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{366:function(a,t,_){"use strict";_.r(t);var s=_(42),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,_=a._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"css-面试题总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css-面试题总结"}},[a._v("#")]),a._v(" CSS 面试题总结")]),a._v(" "),_("h2",{attrs:{id:"一、基础问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、基础问题"}},[a._v("#")]),a._v(" 一、基础问题")]),a._v(" "),_("h3",{attrs:{id:"_1、css中选择器的优先级-说说常用的选择器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、css中选择器的优先级-说说常用的选择器"}},[a._v("#")]),a._v(" 1、css中选择器的优先级，说说常用的选择器")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("通配符（*）")])]),a._v(" "),_("li",[_("p",[a._v("元素选择器（div / p）")]),a._v(" "),_("ul",[_("li",[a._v("关系选择器("),_("strong",[a._v("父元素 > 子元素")]),a._v(" | 祖先 后代 | 前一个 + 后一个 | 兄 ~ 弟)")]),a._v(" "),_("li",[a._v("伪元素选择器（::before  ::after ::first-line 元素第一行）")])])]),a._v(" "),_("li",[_("p",[a._v("类选择器")]),a._v(" "),_("ul",[_("li",[a._v("属性选择器")]),a._v(" "),_("li",[a._v("伪类选择器  （nth-child | first-child | last-child）")])])]),a._v(" "),_("li",[_("p",[a._v("ID 选择器")])]),a._v(" "),_("li",[_("p",[a._v("内联样式")])]),a._v(" "),_("li",[_("p",[a._v("!important")])])]),a._v(" "),_("p",[a._v("关于伪类和伪元素的区别   （是否创造了新元素）")]),a._v(" "),_("ul",[_("li",[a._v("伪类选择器 和DOM中的元素样式不一样，它并不改变任何DOM内容")]),a._v(" "),_("li",[a._v("伪元素选择器 逻辑上存在但在文档树中却无须标识的“幽灵”分类。\n"),_("img",{attrs:{src:"/images/687953-20151201014246499-443921388.jpg",alt:"伪类和伪元素"}})])]),a._v(" "),_("h3",{attrs:{id:"_2、盒模型-普通盒模型和怪异盒模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、盒模型-普通盒模型和怪异盒模型"}},[a._v("#")]),a._v(" 2、盒模型（普通盒模型和怪异盒模型）")]),a._v(" "),_("p",[_("RouterLink",{attrs:{to:"/blog/css-bfc.html#二、普通流的一些特点"}},[a._v("盒模型")])],1),a._v(" "),_("h3",{attrs:{id:"_3、bfc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、bfc"}},[a._v("#")]),a._v(" 3、BFC")]),a._v(" "),_("p",[_("RouterLink",{attrs:{to:"/blog/css-bfc.html"}},[a._v("BFC")])],1),a._v(" "),_("h3",{attrs:{id:"_4、flex布局"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、flex布局"}},[a._v("#")]),a._v(" 4、flex布局")]),a._v(" "),_("p",[a._v("设置父元素为 FFC，具体详见 "),_("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Flex 布局教程：语法篇"),_("OutboundLink")],1)]),a._v(" "),_("ul",[_("li",[a._v("父元素设置 display: flex   inline-flex\n"),_("ul",[_("li",[a._v("flex-direction : row / column / row-reverse / column-reverse")]),a._v(" "),_("li",[a._v("flex-wrap: no-wrap  wrap")]),a._v(" "),_("li",[a._v("flex-flow: row | no-wrap")]),a._v(" "),_("li",[a._v("justify-content: flex-start | flex-end | center | space-between | space-around")]),a._v(" "),_("li",[a._v("align-content: flex-start | flex-end | center | space-between | space-around | stretch")]),a._v(" "),_("li",[a._v("align-item: flex-start | flex-end | center | baseline | stretch")])])]),a._v(" "),_("li",[a._v("子元素属性\n"),_("ul",[_("li",[a._v("order: 0 数字越小，排列越靠前")]),a._v(" "),_("li",[a._v("flex-shrink: 属性定义了项目的缩小比例，默认为1, 当 0 时不缩小")]),a._v(" "),_("li",[a._v("flex-grow: 属性定义项目的放大比例，默认为0, flex-grow属性都为1")]),a._v(" "),_("li",[a._v("flex-basis: 是否占用多余的空间")]),a._v(" "),_("li",[a._v("flex: auto<1 1 auto> | none<0 0 auto> (快捷值)")]),a._v(" "),_("li",[a._v("align-self: auto | flex-start | flex-end | center | baseline | stretch;")])])])]),a._v(" "),_("h3",{attrs:{id:"_5、介绍-support-media-calc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、介绍-support-media-calc"}},[a._v("#")]),a._v(" 5、介绍 @support，@media，calc")]),a._v(" "),_("p",[a._v("@support 判断浏览器是否支持某个属性")]),a._v(" "),_("p",[a._v("@media 媒体查询")]),a._v(" "),_("p",[a._v("calc 计算属性")]),a._v(" "),_("h3",{attrs:{id:"_6、rem、em、vh、vw、px-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6、rem、em、vh、vw、px-的区别"}},[a._v("#")]),a._v(" 6、rem、em、vh、vw、px 的区别")]),a._v(" "),_("ul",[_("li",[a._v("px 像素，相对长度单位，网页设计常用的基本单位")]),a._v(" "),_("li",[a._v("em 相对长度单位。相对于当前对象内文本的字体尺寸")]),a._v(" "),_("li",[a._v("rem rem是相对于HTML根元素的字体大小")]),a._v(" "),_("li",[a._v("vw、vh、vmax、vmin这四个单位都是基于视口\n"),_("ul",[_("li",[a._v("vw、vh 长度等于视口度的1/100")]),a._v(" "),_("li",[a._v("vmin和vmax是相对于视口的高度和宽度两者之间的最小值或最大值")])])]),a._v(" "),_("li",[a._v("%（百分比）就是相对于父元素")])]),a._v(" "),_("h3",{attrs:{id:"_7、实现页面滚动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7、实现页面滚动"}},[a._v("#")]),a._v(" 7、实现页面滚动")]),a._v(" "),_("p",[a._v("overflow-y: scroll")]),a._v(" "),_("h3",{attrs:{id:"_8、display-的属性有哪些"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8、display-的属性有哪些"}},[a._v("#")]),a._v(" 8、display 的属性有哪些")]),a._v(" "),_("p",[_("img",{attrs:{src:"/images/1610415297373.jpg",alt:"display 的属性"}})]),a._v(" "),_("h3",{attrs:{id:"_9、display-none-和-visiblity-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9、display-none-和-visiblity-的区别"}},[a._v("#")]),a._v(" 9、display:none 和 visiblity 的区别")]),a._v(" "),_("h3",{attrs:{id:"_10、伪类常见有哪些-伪元素和伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10、伪类常见有哪些-伪元素和伪类"}},[a._v("#")]),a._v(" 10、伪类常见有哪些，伪元素和伪类")]),a._v(" "),_("h3",{attrs:{id:"_11、position-的属性有哪些"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11、position-的属性有哪些"}},[a._v("#")]),a._v(" 11、position 的属性有哪些")]),a._v(" "),_("ul",[_("li",[a._v("absolute")]),a._v(" "),_("li",[a._v("relative")]),a._v(" "),_("li",[a._v("static")]),a._v(" "),_("li",[a._v("fixed")]),a._v(" "),_("li",[a._v("sticky、相对于最近的一个滚动祖先元素、该值总是创建一个新的层叠上下文（stacking context）。注意，一个sticky元素会“固定”在离它最近的一个拥有“滚动机制”的祖先上（当该祖先的overflow 是 hidden, scroll, auto, 或 overlay时），即便这个祖先不是最近的真实可滚动祖先。这有效地抑制了任何“sticky”行为")])]),a._v(" "),_("h2",{attrs:{id:"二、场景问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、场景问题"}},[a._v("#")]),a._v(" 二、场景问题")]),a._v(" "),_("h3",{attrs:{id:"_1、两列布局-怎么让两列的高度随着内容大小同高呢"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、两列布局-怎么让两列的高度随着内容大小同高呢"}},[a._v("#")]),a._v(" 1、两列布局，怎么让两列的高度随着内容大小同高呢？")]),a._v(" "),_("ul",[_("li",[a._v("① padding-bottom: 9999px; margin-bottom: -9999px;")]),a._v(" "),_("li",[a._v("② 背景图撑大")]),a._v(" "),_("li",[a._v("③ 使用js来实现")])]),a._v(" "),_("h3",{attrs:{id:"_2、实现水平垂直居中"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、实现水平垂直居中"}},[a._v("#")]),a._v(" 2、实现水平垂直居中")]),a._v(" "),_("h3",{attrs:{id:"_3、两列布局-左边固定-右边自适应"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、两列布局-左边固定-右边自适应"}},[a._v("#")]),a._v(" 3、两列布局（左边固定，右边自适应）")]),a._v(" "),_("p",[a._v("flex布局\nbox盒模型布局\ngrid布局\nposition\nfloat")]),a._v(" "),_("h3",{attrs:{id:"_4、怎么处理1像素问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、怎么处理1像素问题"}},[a._v("#")]),a._v(" 4、怎么处理1像素问题")]),a._v(" "),_("ul",[_("li",[a._v("由来：不同设备有不同的像素比，css 像素 和 物理像素的区别")]),a._v(" "),_("li",[a._v("解决方案\n"),_("ul",[_("li",[a._v("根据媒体查询 设置 transform: scaleY 方向的缩小 @media")]),a._v(" "),_("li",[a._v("viewport + rem")]),a._v(" "),_("li",[a._v("border-image")])])])]),a._v(" "),_("h3",{attrs:{id:"_5、用css实现一个三角形-使其位于屏幕中心-并实现loading效果-持续旋转"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、用css实现一个三角形-使其位于屏幕中心-并实现loading效果-持续旋转"}},[a._v("#")]),a._v(" 5、用css实现一个三角形，使其位于屏幕中心，并实现loading效果（持续旋转）")]),a._v(" "),_("h3",{attrs:{id:"_6、flex-布局-实现八个元素分两行平均摆放。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6、flex-布局-实现八个元素分两行平均摆放。"}},[a._v("#")]),a._v(" 6、flex 布局 实现八个元素分两行平均摆放。")]),a._v(" "),_("h3",{attrs:{id:"_7、移动端适配问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7、移动端适配问题"}},[a._v("#")]),a._v(" 7、移动端适配问题")]),a._v(" "),_("h3",{attrs:{id:"_8、怎么用css-实现一个钟表的指针旋转"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8、怎么用css-实现一个钟表的指针旋转"}},[a._v("#")]),a._v(" 8、怎么用css 实现一个钟表的指针旋转")]),a._v(" "),_("h3",{attrs:{id:"_9、介绍双飞翼布局和圣杯布局"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9、介绍双飞翼布局和圣杯布局"}},[a._v("#")]),a._v(" 9、介绍双飞翼布局和圣杯布局")]),a._v(" "),_("h3",{attrs:{id:"_10、css-优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10、css-优化"}},[a._v("#")]),a._v(" 10、css 优化")]),a._v(" "),_("p",[a._v("• 内联首屏关键css\n• 异步加载css\n• 文件压缩\n• 去除无用css\n• 有选择的使用选择器\n• 保持简单，不要使用嵌套过多过于复杂的选择器。\n• 通配符和属性选择器效率最低，需要匹配的元素最多，尽量避免使用。\n• 不要使用类选择器和ID选择器修饰元素标签，如h3#markdown-content，这样多此一举，还会降低效率。\n• 不要为了追求速度而放弃可读性与可维护性。\n• 减少使用昂贵的属性\n• 所有需要浏览器进行操作或计算的属性相对而言都需要花费更大的代价\n• box-shadow/border-radius/filter/透明度/:nth-child\n• 优化重排与重绘\nⅰ. 改变font-size和font-family\nⅱ. 改变元素的内外边距\nⅲ. 通过JS改变CSS类\nⅳ. 通过JS获取DOM元素的位置相关属性（如width/height/left等）\nⅴ. CSS伪类激活\nⅵ. 滚动滚动条或者改变窗口大小\n此外，我们还可以通过CSS Trigger15查询哪些属性会触发重排与重绘。\n值得一提的是，某些CSS属性具有更好的重排性能。如使用Flex时，比使用inline-block和 float时重排更快，所以在布局时可以优先考虑Flex。               float时重排更快，所以在布局时可以优先考虑Flex。\n• 不要使用@import\n• 使用@import引入CSS会影响浏览器的并行下载？？\n• 多个@import会导致下载顺序紊乱？？")]),a._v(" "),_("h3",{attrs:{id:"_11、从li中改变最后一个孩子的样式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11、从li中改变最后一个孩子的样式"}},[a._v("#")]),a._v(" 11、从li中改变最后一个孩子的样式")]),a._v(" "),_("ul",[_("li",[a._v("伪类选择器 last-child")]),a._v(" "),_("li",[a._v("添加类名称")])]),a._v(" "),_("h3",{attrs:{id:"_12、简单说下-、px、rem、em、rpx、upx、vw、vh、vm的区别及使用场景-结合盒模型-说一下如何增加点击区域"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12、简单说下-、px、rem、em、rpx、upx、vw、vh、vm的区别及使用场景-结合盒模型-说一下如何增加点击区域"}},[a._v("#")]),a._v(" 12、简单说下%、px、rem、em、rpx、upx、vw、vh、vm的区别及使用场景？结合盒模型,说一下如何增加点击区域?")]),a._v(" "),_("h3",{attrs:{id:"_13、css-flex套flex宽度自适应实现单行文本省略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13、css-flex套flex宽度自适应实现单行文本省略"}},[a._v("#")]),a._v(" 13、css  flex套flex宽度自适应实现单行文本省略")]),a._v(" "),_("h3",{attrs:{id:"_14、css中的特性三通过矩阵中的怎样变换得到的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14、css中的特性三通过矩阵中的怎样变换得到的"}},[a._v("#")]),a._v(" 14、css中的特性三通过矩阵中的怎样变换得到的？")]),a._v(" "),_("h3",{attrs:{id:"_15、用-flex-实现下图效果。容器宽高不定-子元素宽高固定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15、用-flex-实现下图效果。容器宽高不定-子元素宽高固定"}},[a._v("#")]),a._v(" 15、用 flex 实现下图效果。容器宽高不定，子元素宽高固定？")]),a._v(" "),_("p",[_("img",{attrs:{src:"/images/css-flex-layout.jpg",alt:""}})]),a._v(" "),_("p",[a._v("display: flex;")]),a._v(" "),_("p",[a._v("align-self(2): center   align-self(3): flex-end")]),a._v(" "),_("h3",{attrs:{id:"_16、什么是雪碧图-如何展示雪碧图中指定位置的图片"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16、什么是雪碧图-如何展示雪碧图中指定位置的图片"}},[a._v("#")]),a._v(" 16、什么是雪碧图，如何展示雪碧图中指定位置的图片")]),a._v(" "),_("p",[a._v("background-position\n优：减少加载网页图片时对服务器的请求次数,提高页面的加载速度\n缺：CSS雪碧的最大问题是内存使用，影响浏览器的缩放功能")]),a._v(" "),_("h2",{attrs:{id:"三、html-方面问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、html-方面问题"}},[a._v("#")]),a._v(" 三、html 方面问题")]),a._v(" "),_("h3",{attrs:{id:"_1、html-页面的生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、html-页面的生命周期"}},[a._v("#")]),a._v(" 1、html 页面的生命周期")]),a._v(" "),_("ul",[_("li",[a._v("① load 浏览器已经加载了所有的资源")]),a._v(" "),_("li",[a._v("② DOMContentLoaded 浏览器已经完全加载了HTML，DOM树已经构建完毕之后会运行该事件，但是像是"),_("img"),a._v("和样式表等外部资源可能并没有下载完毕。所以js可以访问所有DOM节点，初始化界面")]),a._v(" "),_("li",[a._v("③ beforeunload/unload 当用户离开页面的时候触发 。可以询问用户是否保存了更改以及是否确定要离开页面")])]),a._v(" "),_("p",[a._v("由此有下面的方法：")]),a._v(" "),_("ul",[_("li",[a._v("window.onload window对象上的onload事件在所有文件包括样式表，图片和其他资源下载完毕后触发")]),a._v(" "),_("li",[a._v("window.onbeforeunload")]),a._v(" "),_("li",[a._v("window.unonload 用户离开页面的时候，window对象上的unload事件会被触发")])]),a._v(" "),_("h3",{attrs:{id:"_2、事件流的过程-怎么阻止事件冒泡。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、事件流的过程-怎么阻止事件冒泡。"}},[a._v("#")]),a._v(" 2、事件流的过程，怎么阻止事件冒泡。")]),a._v(" "),_("p",[_("RouterLink",{attrs:{to:"/blog/html-click.html"}},[a._v("点击按钮")])],1),a._v(" "),_("h5",{attrs:{id:"防止冒泡和捕获"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#防止冒泡和捕获"}},[a._v("#")]),a._v(" 防止冒泡和捕获")]),a._v(" "),_("p",[a._v("w3c的方法是e.stopPropagation()，IE则是使用e.cancelBubble = true")]),a._v(" "),_("h5",{attrs:{id:"取消默认事件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#取消默认事件"}},[a._v("#")]),a._v(" 取消默认事件")]),a._v(" "),_("p",[a._v("w3c的方法是e.preventDefault()，IE则是使用e.returnValue = false;")]),a._v(" "),_("h5",{attrs:{id:"react-中阻止事件冒泡"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#react-中阻止事件冒泡"}},[a._v("#")]),a._v(" react 中阻止事件冒泡")]),a._v(" "),_("p",[a._v("react有专属的阻止事件冒泡方法，e.nativeEvent.stopImmediatePropagation();")]),a._v(" "),_("h3",{attrs:{id:"_3、从获得-html-到解析页面全流程-为什么栅格线程使用-gpu-计算而不是-cpu-计算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、从获得-html-到解析页面全流程-为什么栅格线程使用-gpu-计算而不是-cpu-计算"}},[a._v("#")]),a._v(" 3、从获得 HTML 到解析页面全流程，为什么栅格线程使用 GPU 计算而不是 CPU 计算")]),a._v(" "),_("h4",{attrs:{id:"_1-构建-dom-树"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-构建-dom-树"}},[a._v("#")]),a._v(" (1) 构建 DOM 树")]),a._v(" "),_("p",[a._v("首先浏览器无法理解 html，需要 HTML 解析器将其解析成 DOM 树。这个树的根节点是 document")]),a._v(" "),_("h4",{attrs:{id:"_2-样式计算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-样式计算"}},[a._v("#")]),a._v(" (2) 样式计算")]),a._v(" "),_("p",[a._v("样式计算的目的是为了每个DOM 节点有具体的样式，可以分为三个步骤")]),a._v(" "),_("ul",[_("li",[a._v("把 css 文件 内容转化为 document.styleSheets")]),a._v(" "),_("li",[a._v("转化样式表中的属性值，使其标准化")]),a._v(" "),_("li",[a._v("继承默认样式后计算每个 DOM 节点的属性值")])]),a._v(" "),_("h4",{attrs:{id:"_3-布局阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-布局阶段"}},[a._v("#")]),a._v(" (3) 布局阶段")]),a._v(" "),_("p",[a._v("有了 DOM 树和 DOM 树中元素的样式，还不知道 DOM 元素的几何位置信息。")]),a._v(" "),_("p",[a._v("首先遍历 DOM 树中的 可见节点，将其加到布局树中，不可见节点会被布局树忽略掉。接下来就要计算布局树中每个元素的坐标位置了。")]),a._v(" "),_("h4",{attrs:{id:"_4-分层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-分层"}},[a._v("#")]),a._v(" (4) 分层")]),a._v(" "),_("p",[a._v("对布局树进行分层，并生成图层树。")]),a._v(" "),_("ul",[_("li",[a._v("拥有层叠上下文属性的元素会被提升为单独的一层")]),a._v(" "),_("li",[a._v("需要剪裁（clip）的地方也会被创建为图层")])]),a._v(" "),_("h4",{attrs:{id:"_5-绘制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-绘制"}},[a._v("#")]),a._v(" (5) 绘制")]),a._v(" "),_("p",[a._v("在完成图层树的构建之后，渲染引擎会对图层树中的每个图层进行绘制，这个阶段输出待绘制的列表。")]),a._v(" "),_("h4",{attrs:{id:"_6-栅格化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-栅格化"}},[a._v("#")]),a._v(" (6) 栅格化")]),a._v(" "),_("p",[a._v("栅格化是渲染引擎中的合成线程来操作，合成线程会将图层划分为图块，然后会按照视口附近的图块优先生成位图。渲染进程维护了一个栅格化的线程池。栅格化过程需要GPU来加速，并保存在GPU的内存中。")]),a._v(" "),_("h4",{attrs:{id:"_7-合成和显示"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-合成和显示"}},[a._v("#")]),a._v(" (7) 合成和显示")]),a._v(" "),_("p",[a._v("所有的图块都光栅化完成以后，然后给浏览器进程发送命令，浏览器进程将页面绘制到内存中，最后将内存中的信息显示到页面上。")]),a._v(" "),_("p",[a._v("GPU 的计算单元比 CPU 大，GPU 擅长利用多核心处理单一的任务。")]),a._v(" "),_("h3",{attrs:{id:"_4、影响首屏加载的因素有哪些-分别如何进行优化-performance-有哪些相关的指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、影响首屏加载的因素有哪些-分别如何进行优化-performance-有哪些相关的指标"}},[a._v("#")]),a._v(" 4、影响首屏加载的因素有哪些，分别如何进行优化，performance 有哪些相关的指标")])])}),[],!1,null,null,null);t.default=r.exports}}]);