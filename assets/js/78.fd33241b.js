(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{386:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第一章-正则表达式字符匹配攻略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-正则表达式字符匹配攻略"}},[s._v("#")]),s._v(" 第一章 正则表达式字符匹配攻略")]),s._v(" "),a("p",[s._v("本书作者老姚，是一部免费的，并且能助大家快速入门的一部正则书籍，能拜读到他的这部书，也是我猿生的荣幸！")]),s._v(" "),a("p",[s._v("正则表达式匹配模式，"),a("strong",[s._v("要么匹配字符，要么匹配位置")]),s._v("。而正则本身的"),a("strong",[s._v("元字符")]),s._v("太多，不是特别好记。")]),s._v(" "),a("ul",[a("li",[s._v("一、两种模糊匹配")]),s._v(" "),a("li",[s._v("二、字符组")]),s._v(" "),a("li",[s._v("三、量词")]),s._v(" "),a("li",[s._v("四、分支结构")]),s._v(" "),a("li",[s._v("五、案例分析")])]),s._v(" "),a("h2",{attrs:{id:"一、两种模糊匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、两种模糊匹配"}},[s._v("#")]),s._v(" 一、两种模糊匹配")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/hello/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("模糊匹配分为两个方向：横向模糊和纵向模糊")]),s._v(" "),a("p",[a("strong",[s._v("横向")]),s._v("指一个正则可匹配的字符串长度不是固定的，可以是多种情况。解决方法是用 "),a("strong",[s._v("量词")]),s._v(" 如："),a("code",[s._v("{m,n}")]),s._v(" 最少 m 次， 最多 n 次。"),a("br"),s._v("\n如："),a("code",[s._v("/ab{2,5}c/g")]),s._v(" 第一个字符是 a， 接下来 2-5 个 b， 最后一个 c。")]),s._v(" "),a("blockquote",[a("p",[s._v("g 是"),a("strong",[s._v("修饰符")]),s._v("，表全局匹配，是 "),a("code",[s._v("global")]),s._v("首字母。")])]),s._v(" "),a("p",[a("strong",[s._v("纵向")]),s._v("指一个正则匹配的字符串，具体到某一位字符时，它可以不是某个确定的字符，可以有多种可能。如： "),a("code",[s._v("/a[123]/b")]),s._v(" 匹的结果是 "),a("code",[s._v("a1b")]),s._v("、 "),a("code",[s._v("a2b")]),s._v("、 "),a("code",[s._v("a3b")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"二、字符组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、字符组"}},[s._v("#")]),s._v(" 二、字符组")]),s._v(" "),a("p",[s._v("虽叫字符组，但只是其中的一个字符。"),a("code",[s._v("[abc]")]),s._v("表 a、b、 c 其中之一。")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("范围表示法")]),s._v("："),a("code",[s._v("[1234567abcdefGHIJK]")]),s._v(" 可以写成"),a("code",[s._v("[1-6a-fG-K]")]),s._v("。那么需要匹 "),a("code",[s._v("a")]),s._v(" "),a("code",[s._v("-")]),s._v(" "),a("code",[s._v("f")]),s._v(" 这三者中任意一个字符，则需要写成 "),a("code",[s._v("[-az]")]),s._v(" 或 "),a("code",[s._v("[az-]")]),s._v(" 或 "),a("code",[s._v("[a\\-z]")]),s._v("。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("排除字符组")]),s._v("：纵向匹配，某位字符可以是任何东西，就不能是 a、b、 c 其中之一，则可以写为"),a("code",[s._v("[^abc]")]),s._v("（反义字符组）。"),a("code",[s._v("^")]),s._v("表"),a("strong",[s._v("脱字符")]),s._v("。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("简写形式")])])])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("字符组")]),s._v(" "),a("th",[s._v("具体含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("\\d")])]),s._v(" "),a("td",[s._v("表"),a("code",[s._v("[0-9]")]),s._v("，即是一位数字。"),a("br"),s._v(" 记忆方式："),a("strong",[s._v("英文是 digit (数字)")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("\\D")])]),s._v(" "),a("td",[s._v("表"),a("code",[s._v("[^0-9]")]),s._v("，即除数字外的任意字符")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("\\w")])]),s._v(" "),a("td",[s._v("表"),a("code",[s._v("[0-9a-zA-Z]")]),s._v("，即数字，大小写字母和下划线。"),a("br"),s._v(" 记忆方式："),a("strong",[s._v("w 是 word 的简写")]),s._v("，也称单词字符")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("\\W")])]),s._v(" "),a("td",[s._v("表"),a("code",[s._v("[^0-9a-zA-Z]")]),s._v("，非单词字符")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("\\s")])]),s._v(" "),a("td",[s._v("表"),a("code",[s._v("[ \\t\\v\\n\\r\\f]")]),s._v("，表示空白符。包括空格，水平制表符，垂直制表符，换行符，回车符，换页符。"),a("br"),s._v(" 记忆方式： "),a("strong",[s._v("s 是 space 的首字母， 空白符的单词是 white space")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("\\S")])]),s._v(" "),a("td",[s._v("表"),a("code",[s._v("[^ \\t\\v\\n\\r\\f]")]),s._v("，非空白符")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v(".")])]),s._v(" "),a("td",[s._v("表"),a("code",[s._v("[^\\n\\r\\u2028\\u2029]")]),s._v("，表通配符， 即任何字符。换行符，回车符，行分隔符和段分隔符除外。"),a("br"),s._v(" 记忆方式："),a("strong",[s._v("想想省略号 ... 中的每个店，都可以理解成占位符，表示任何类似的东西")])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("任意字符")]),s._v(" "),a("p",[s._v("如果要匹配任意字符，可以使用 "),a("code",[s._v("[\\d\\D]")]),s._v(" "),a("code",[s._v("[\\w\\W]")]),s._v(" "),a("code",[s._v("[\\s\\S]")]),s._v(" 和 "),a("code",[s._v("[^]")]),s._v("中的任何一个。")])]),s._v(" "),a("h2",{attrs:{id:"三、量词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、量词"}},[s._v("#")]),s._v(" 三、量词")]),s._v(" "),a("p",[s._v("就是横向重复，即 "),a("code",[s._v("{m,n}")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("简写形式")])])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("量词")]),s._v(" "),a("th",[s._v("具体含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("{m,}")])]),s._v(" "),a("td",[s._v("表至少出现 m 次")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("{m}")])]),s._v(" "),a("td",[s._v("等价 "),a("code",[s._v("{m,m}")]),s._v("，表出现 m 次")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("?")])]),s._v(" "),a("td",[s._v("等价 "),a("code",[s._v("{0,1}")]),s._v("，表出现或不出现。"),a("br"),s._v("记忆方式："),a("strong",[s._v("问号的意思表示，有吗？")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("+")])]),s._v(" "),a("td",[s._v("等价 "),a("code",[s._v("{1,}")]),s._v("，表出现至少一次。"),a("br"),s._v("记忆方式："),a("strong",[s._v("加号是追加的意思，得现有一个，然后才考虑追加")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("*")])]),s._v(" "),a("td",[s._v("等价 "),a("code",[s._v("{0,}")]),s._v("，表出现任意次，有可能不出现。"),a("br"),s._v("记忆方式："),a("strong",[s._v("看天上的星星，可能一颗没有，可能零散有几颗，可能数也数不过来")])])])])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("贪婪与惰性匹配")]),a("br"),s._v("\n下面看两个列子的区别。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123 1234 12345 123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 案列一 (贪婪：尽可能多的匹配) 贪婪不是一件好事")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\d{2,5}/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['123','1234','12345','12345']")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 案列二 (惰性：尽可能少的匹配)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/\\d{2,5}?/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['12','12','34','12','34','12','34','56']")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("对惰性匹配的记忆方式：量词后面加个问号，问问你直租了吗，你很贪婪吗？")])]),s._v(" "),a("h2",{attrs:{id:"四、多选分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、多选分支"}},[s._v("#")]),s._v(" 四、多选分支")]),s._v(" "),a("p",[s._v("一个模式可以实现横向和纵向匹配，多选分支可以支持多个子模式任选其一，用 "),a("code",[s._v("|")]),s._v("（管道符）分隔，表其中任何之一。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/good|nice/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"good idea, nice try."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['good', 'nice']")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 但是/good|goodbye/ 匹配时，结果只有一个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/good|nice/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"goodbye."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ['good']")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 也就是说分支结果也是惰性的，即前面的匹配上了，后面就不再尝试了")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"五、案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、案例"}},[s._v("#")]),s._v(" 五、案例")]),s._v(" "),a("h4",{attrs:{id:"_1、匹配-16-进制颜色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、匹配-16-进制颜色"}},[s._v("#")]),s._v(" 1、匹配 16 进制颜色")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求匹配")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// #ffbbad #Fco1DF #FFF #ffE")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要用量词和分支结构，其中字母范围是 a-f")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("#"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fA"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("fA"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("g\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h4",{attrs:{id:"_2、匹配时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、匹配时间"}},[s._v("#")]),s._v(" 2、匹配时间")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求匹配")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 23:59  02:07")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一共四位数字，第一位范围是 [0-2]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二位根据第一位为[01]时，则为[0-9]。 第一位为[2]时，则为[0-3]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第三位是[0-5], 第四位是 [0-9]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求匹配")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在前面的基础上匹配 7:9 呢？")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前面的0可以省略掉，则可以用到量词简写 ?")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/^(0?[0-9]|1[0-9]|2[0-3]):(0?[0-9]|[1-5][0-9])$/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("`^` 和 `$`")]),s._v(" "),a("p",[a("code",[s._v("^")]),s._v(" 和 "),a("code",[s._v("$")]),s._v(" 表示字符串的开头和结尾")])]),s._v(" "),a("h4",{attrs:{id:"_3、匹配日期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、匹配日期"}},[s._v("#")]),s._v(" 3、匹配日期")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求匹配")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2017-06-10")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 年：四位数字,[0-9]{4}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 月：共12个月,(0[1-9]|1[0-2])")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 日：最大31天,(0[1-9]|[12][0-9]|3[01])")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"_4、window-操作系统文件路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、window-操作系统文件路径"}},[s._v("#")]),s._v(" 4、window 操作系统文件路径")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求匹配")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// F:\\study\\javascript\\regex\\regular expression.pdf")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// F:\\study\\javascript\\regex\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// F:\\study\\javascript")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// F:\\")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 总体格式为 ”盘符:\\文件夹\\文件夹\\文件夹\\“")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 盘符: [c-zC-Z]:\\\\ （\\需要转义，所以变成 \\\\)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 文件夹: 不能包含一些特殊的字符 [^\\\\:*<>|"?\\r\\n/]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 另外名字不能为空 [^\\\\:*<>|"?\\r\\n/]+\\\\')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 文件夹可以出现任意次 ([^\\\\:*<>|"?\\r\\n/]+\\\\)*')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 最后一个文件夹没有 \\, 即([^\\\\:*<>|"?\\r\\n/]+)?')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v('/^[c-zC-Z]:\\\\([^\\\\:*<>|"?\\r\\n/]+\\\\)*|([^\\\\:*<>|"?\\r\\n/]+)?$/')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h4",{attrs:{id:"_5、匹配-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、匹配-id"}},[s._v("#")]),s._v(" 5、匹配 id")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求匹配")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// <div id="container" class="main"></div>')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 可以用 /id=".*"/g ，但是*是贪婪的，匹配结果为 id="container" class="main"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 可以改成惰性匹配 /id=".*?"/g')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*?"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这样效率低，涉及到回溯，优化成")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[^"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"六、正则工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、正则工具"}},[s._v("#")]),s._v(" 六、正则工具")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://regexone.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("正则练习平台"),a("OutboundLink")],1),s._v(" 可以利用这个工具练习正则，提高水平")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("正则视图生成器1"),a("OutboundLink")],1),s._v(" 一个可以快速直观看到匹配的结果的在线工具")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://regexr.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("正则视图生成器2"),a("OutboundLink")],1),s._v(" 另外一个可以快速直观看到匹配的结果的在线工具")])])])}),[],!1,null,null,null);t.default=e.exports}}]);